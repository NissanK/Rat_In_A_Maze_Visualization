{"version":3,"sources":["images/Github-logo.png","images/LinkedIn-logo.png","components/GridInput.js","components/Col.js","components/ColSt.js","components/ColEnd.js","components/Row.js","components/QuestionMatrix.js","components/SolutionCol.js","components/SolutionRow.js","components/SolutionMatrix.js","components/NoValidAnswer.js","components/Info.js","components/Backdrop.js","components/InfoBtn.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","GridInput","_useState","useState","_useState2","_slicedToArray","displayText","setDisplayText","dimensionArray","useContext","DimensionContext","setRows","setColumns","setGenerateMatrix","GenerateContext","solutionsArray","SolutionsContext","setValidSolution","setValidSolutionCnt","setNoAnswer","NoAnswerContext","rowInputRef","useRef","colInputRef","useEffect","current","focus","React","createElement","className","ref","type","onClick","value","alert","Col","props","generateMatrix","_useContext","MatrixValues","_useContext2","matrixValues","setMatrixValues","elementRef","bgColor","setBgColor","style","backgroundColor","onMouseOver","r","row","c","valid","onMouseLeave","e","ColSt","Row","dimensionsArray","rows","columns","rowMatrix","i","push","key","ColEnd","QuestionMatrix","setFindSolutions","FindSolutionsContext","setInputDisplay","InputDisplayContext","matrix","dimenstionStyling","height","concat","width","window","innerWidth","color","SolutionCol","validSolution","positionSolutionArray","PositionSolutionContext","positionSolutionX","positionSolutionY","_useState3","_useState4","isArrow","setIsArrow","n","length","isPath","FontAwesomeIcon","icon","faArrowDown","faArrowUp","faArrowLeft","faArrowRight","SolutionRow","SolutionMatrix","validSolutionCnt","NoValidAnswer","id","Info","href","target","src","require","alt","Backdrop","setInfoDisplay","InfoContext","InfoBtn","faInfo","createContext","Main","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","findSolutions","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","setPositionSolutionX","_useState17","_useState18","setPositionSolutionY","_useState19","_useState20","inputDisplay","_useState21","_useState22","infoDisplay","_useState23","_useState24","noAnswer","newMatrix","_toConsumableArray","j","ans","calculateNew","min","max","newValid","Math","ceil","floor","random","newPositionX","newPositionY","x","y","Array","isArray","visited","visitedRow","dfs","current_path","findRatInAMaze","Provider","App","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.883202b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Github-logo.c6e97e44.png\";","module.exports = __webpack_public_path__ + \"static/media/LinkedIn-logo.dda499d8.png\";","import React,{useState,useEffect,useRef, useContext} from 'react'\r\nimport '../Stylesheets/styles.css';\r\nimport {DimensionContext, GenerateContext, NoAnswerContext, SolutionsContext} from './Main'\r\n\r\nfunction GridInput() {\r\n    const [displayText, setDisplayText] = useState(1);\r\n\r\n    const dimensionArray = useContext(DimensionContext);\r\n    const setRows = dimensionArray[1];\r\n    const setColumns = dimensionArray[3];\r\n\r\n    const generateArray = useContext(GenerateContext);\r\n    const setGenerateMatrix = generateArray[1];\r\n    \r\n    const solutionsArray = useContext(SolutionsContext);\r\n    const setValidSolution = solutionsArray[1];\r\n    const setValidSolutionCnt = solutionsArray[3];\r\n\r\n    const setNoAnswer = useContext(NoAnswerContext)[1];\r\n\r\n    const rowInputRef = useRef(null);\r\n    const colInputRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        rowInputRef.current.focus();\r\n    },[]);\r\n\r\n    const setDimensions = () =>{\r\n        if(rowInputRef.current.value > 6 || rowInputRef.current.value < 2 || colInputRef.current.value > 6 || colInputRef.current.value < 2){\r\n            alert(\"No of rows and columns should be less than 6 and greater than 2\");\r\n            rowInputRef.current.value = 2;\r\n            colInputRef.current.value = 2;\r\n            return;\r\n        }\r\n        setRows(rowInputRef.current.value);\r\n        setColumns(colInputRef.current.value);\r\n        setGenerateMatrix(1);\r\n        setValidSolution('');\r\n        setValidSolutionCnt(0);\r\n        setNoAnswer(0);\r\n        setDisplayText(0);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <div className='flexContainer flexSpaceAround'>\r\n            <div className='RowCol flexSpaceAround'>\r\n                <div className='inputContainer'>\r\n                    <label className='inputs'>Rows</label>\r\n                    <input ref={rowInputRef} type='number'></input>\r\n                </div>\r\n                <div className='inputContainer'>\r\n                    <label className='inputs'>Columns</label>\r\n                    <input ref={colInputRef} type='number'></input>\r\n                </div>\r\n            </div>\r\n            <div className='generateMatrixContainer'>\r\n                <button className='submit' onClick={setDimensions}>Generate Matrix</button>\r\n            </div>\r\n        </div>\r\n        {displayText && <div className='flexContainer generalText'>\r\n            Enter the rows and columns of the Matrix!\r\n        </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GridInput","import React,{useState,useContext, useEffect,useRef} from 'react'\r\n\r\nimport { GenerateContext, MatrixValues} from './Main';\r\n\r\nfunction Col(props) {\r\n    const generateMatrixArray = useContext(GenerateContext);\r\n    const generateMatrix = generateMatrixArray[0];\r\n    const [matrixValues,setMatrixValues] = useContext(MatrixValues);\r\n    \r\n    const elementRef = useRef(null);\r\n\r\n    const [bgColor,setBgColor] = useState('lightgreen');\r\n\r\n    useEffect(()=>{\r\n        elementRef.current.style = {backgroundColor : 'lightgreen'}\r\n    },[generateMatrix])\r\n\r\n    const clickHandler = e =>{\r\n        if(!matrixValues[props.r].row[props.c].valid){\r\n            matrixValues[props.r].row[props.c].valid = 1;\r\n            setMatrixValues(matrixValues);\r\n            setBgColor('lightgreen');\r\n        }\r\n        else{\r\n            matrixValues[props.r].row[props.c].valid = 0;\r\n            setMatrixValues(matrixValues);\r\n            setBgColor('rgb(241, 120, 120)');\r\n        }\r\n    }\r\n    const hoverHandlerIn = () =>{\r\n        if(matrixValues[props.r].row[props.c].valid) setBgColor('lime');\r\n        else setBgColor('rgb(243, 67, 67)');\r\n    }\r\n    const hoverHandlerOut = () =>{\r\n        if(matrixValues[props.r].row[props.c].valid) setBgColor('lightgreen');\r\n        else setBgColor('rgb(241, 120, 120)');\r\n    }\r\n    return (\r\n        <div className='col' ref={elementRef} onMouseOver={hoverHandlerIn} onMouseLeave={hoverHandlerOut} onClick={clickHandler} style={{backgroundColor: bgColor}}></div>\r\n    )\r\n}\r\n\r\nexport default Col","import React from 'react'\r\n\r\nfunction ColSt(props) {\r\n  return (\r\n    <div className='endPoints'>\r\n        <div>S</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColSt","import React from 'react'\r\n\r\nfunction ColSt(props) {\r\n  return (\r\n    <div className='endPoints'>\r\n        <div>E</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColSt","import React,{useContext} from 'react'\r\n\r\nimport { DimensionContext } from './Main';\r\nimport '../Stylesheets/styles.css'\r\nimport Col from './Col';\r\nimport ColSt from './ColSt';\r\nimport ColEnd from './ColEnd';\r\n\r\nfunction Row(props) {\r\n    const dimensionsArray = useContext(DimensionContext);\r\n    const rows = dimensionsArray[0];\r\n    const columns = dimensionsArray[2];\r\n    \r\n    const rowMatrix = [];\r\n\r\n    for(let i = 0;i<columns;i++){\r\n      if(props.r === 0 && i === 0){\r\n        rowMatrix.push(<ColSt r={props.r} c={i} key={i}></ColSt>)\r\n      }\r\n      else if(props.r === rows-1 && i === columns-1){\r\n        rowMatrix.push(<ColEnd r={props.r} c={i} key={i}></ColEnd>)\r\n      }\r\n      else\r\n        rowMatrix.push(<Col r={props.r} c={i} key={i}></Col>);\r\n    }\r\n  return (\r\n    <div className='row'>{rowMatrix}</div>\r\n  )\r\n}\r\n\r\nexport default Row","import React,{useContext} from 'react'\r\nimport {DimensionContext, FindSolutionsContext, InputDisplayContext} from './Main';\r\nimport '../Stylesheets/styles.css'\r\nimport Row from './Row';\r\n\r\nfunction QuestionMatrix() {\r\n\r\n    const dimensionsArray = useContext(DimensionContext);\r\n    const rows = dimensionsArray[0];\r\n    const columns = dimensionsArray[2];\r\n\r\n    const solutionsArray = useContext(FindSolutionsContext);\r\n    const setFindSolutions = solutionsArray[1];\r\n\r\n    const inputDisplayArray = useContext(InputDisplayContext);\r\n    const setInputDisplay = inputDisplayArray[1];\r\n\r\n\r\n    let matrix = [];\r\n    for(let i = 0;i<rows;i++){\r\n        matrix.push(<Row r={i} key={i}></Row>);\r\n    }\r\n    \r\n    function height(){\r\n        let width = window.innerWidth;\r\n        if(width < 750 && width>=600) return rows*4;\r\n        else if(width < 600) return rows*3;\r\n        return rows * 5;\r\n    }\r\n    function width(){\r\n        let width = window.innerWidth;\r\n        if(width < 750 && width>=600) return columns*4;\r\n        else if(width < 600) return columns*3;\r\n        return columns * 5;\r\n    }\r\n    const dimenstionStyling = {\r\n        height: `${height()}em`,\r\n        width: `${width()}em`\r\n    }\r\n  return (\r\n    <div className='flexContainer'>\r\n        <div className='flexSpaceAround '>\r\n            <div className='matrixContainer'>\r\n                <div className='matrix' style={dimenstionStyling}>\r\n                    {matrix}\r\n                </div>\r\n            </div>\r\n            <div className='flexContainer flexDirectionCol width45'>\r\n                <div className='generalText'>\r\n                    Click on the <span className='inherit' style={{color : \"lightgreen\"}}>Green</span> Squares to toggle them <span className='inherit' style={{color : \"rgb(241, 120, 120)\"}}>Red</span> and vice-versa\r\n                </div>\r\n                <button className='submit marginTop' onClick={() => {setFindSolutions(1);setInputDisplay(0)}}>Find Solutions</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionMatrix","import React,{useState,useContext, useEffect,useRef} from 'react'\r\n\r\nimport {MatrixValues,SolutionsContext,PositionSolutionContext} from './Main';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft,faArrowDown,faArrowRight,faArrowUp } from '@fortawesome/free-solid-svg-icons' // <-- import styles to be used\r\n\r\nfunction SolutionCol(props) {\r\n    const matrixValuesArray = useContext(MatrixValues);\r\n    const matrixValues = matrixValuesArray[0];\r\n\r\n    const solutionsArray = useContext(SolutionsContext);\r\n    const validSolution = solutionsArray[0];\r\n\r\n    const positionSolutionArray = useContext(PositionSolutionContext);\r\n    const positionSolutionX = positionSolutionArray[0];\r\n\r\n    const positionSolutionY = positionSolutionArray[2];\r\n\r\n    const elementRef = useRef(null);\r\n\r\n    const [bgColor,setBgColor] = useState('lightgreen');\r\n    const [isArrow,setIsArrow] = useState('');\r\n\r\n    useEffect(()=>{\r\n        setIsArrow('');\r\n        const n = positionSolutionX.length;\r\n        let isPath = false;\r\n        // console.log(positionSolutionX,positionSolutionY);\r\n        for(let i = 0;i<n;i++){\r\n            if(positionSolutionX[i] === props.r && positionSolutionY[i] === props.c){\r\n                isPath = true;\r\n                setIsArrow(validSolution[i]);\r\n            }\r\n        }\r\n        // console.log(isPath,props.r,props.c);\r\n        if(isPath){\r\n            setBgColor('rgb(96, 231, 231)');\r\n            // console.log(\"background color set to blue\");\r\n        } \r\n        else if(matrixValues[props.r].row[props.c].valid) setBgColor('lightgreen');\r\n        else setBgColor('rgb(241, 120, 120)');\r\n    },[positionSolutionX,positionSolutionY,matrixValues,props.c,validSolution,props.r])\r\n    \r\n    return (\r\n        <div className='solutionCol' ref={elementRef} style={{backgroundColor: bgColor}}>\r\n            {isArrow === 'D' ? <FontAwesomeIcon className='arrow' icon={faArrowDown} /> : null}\r\n            {isArrow === 'U' ? <FontAwesomeIcon className='arrow' icon={faArrowUp} /> : null}\r\n            {isArrow === 'L' ? <FontAwesomeIcon className='arrow' icon={faArrowLeft} /> : null}\r\n            {isArrow === 'R' ? <FontAwesomeIcon className='arrow' icon={faArrowRight} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SolutionCol","import React,{useContext} from 'react'\r\nimport ColEnd from './ColEnd';\r\nimport SolutionCol from './SolutionCol';\r\n\r\nimport { DimensionContext } from './Main';\r\nimport '../Stylesheets/styles.css'\r\n\r\nfunction SolutionRow(props) {\r\n    const dimensionsArray = useContext(DimensionContext);\r\n    const rows = dimensionsArray[0];\r\n    const columns = dimensionsArray[2];\r\n    const rowMatrix = [];\r\n\r\n    for(let i = 0;i<columns;i++){\r\n      if(props.r === rows-1 && i === columns-1){\r\n        rowMatrix.push(<ColEnd r={props.r} c={i} key={i}></ColEnd>)\r\n      }\r\n      else\r\n        rowMatrix.push(<SolutionCol r={props.r} c={i} key={i}></SolutionCol>);\r\n    }\r\n  return (\r\n    <div className='row'>{rowMatrix}</div>\r\n  )\r\n}\r\n\r\nexport default SolutionRow","import React,{useContext} from 'react'\r\nimport SolutionRow from './SolutionRow';\r\nimport { DimensionContext, FindSolutionsContext, SolutionsContext} from './Main';\r\n\r\nfunction SolutionMatrix() {\r\n\r\n    const dimensionsArray = useContext(DimensionContext);\r\n    const rows = dimensionsArray[0];\r\n    const columns = dimensionsArray[2];\r\n\r\n    const findSolutionsArray = useContext(FindSolutionsContext);\r\n    const setFindSolutions = findSolutionsArray[1];\r\n\r\n    const solutionsArray = useContext(SolutionsContext);\r\n    const validSolutionCnt = solutionsArray[2];\r\n\r\n    let matrix = [];\r\n    for(let i = 0;i<rows;i++){\r\n        matrix.push(<SolutionRow r={i} key={i}></SolutionRow>);\r\n    }\r\n    \r\n    function height(){\r\n        let width = window.innerWidth;\r\n        if(width < 750 && width>=600) return rows*4;\r\n        else if(width < 600) return rows*3;\r\n        return rows * 5;\r\n    }\r\n    \r\n    function width(){\r\n        let width = window.innerWidth;\r\n        if(width < 750 && width>=600) return columns*4;\r\n        else if(width < 600) return columns*3;\r\n        return columns * 5;\r\n    }\r\n\r\n    const dimenstionStyling = {\r\n        height: `${height()}em`,\r\n        width: `${width()}em`\r\n    }\r\n\r\n  return (\r\n    <div className='flexContainer'>\r\n        {\r\n            <div className='flexSpaceAround flexGrow'>\r\n                    <div className='matrixContainer'>\r\n                        <div className='matrix' style={dimenstionStyling}>\r\n                            {matrix}\r\n                        </div>\r\n                    </div>\r\n                <div className='flexContainer flexDirectionCol'>\r\n                    <button className='submit marginTop' onClick={() => setFindSolutions(1)}>Find Another Solution</button>\r\n                    <div className='generalText'>\r\n                        There are {validSolutionCnt} Unique Solutions!\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SolutionMatrix","import React, { useContext } from 'react'\r\nimport { GenerateContext, NoAnswerContext } from './Main'\r\n\r\nfunction NoValidAnswer() {\r\n    const setGenerateMatrix = useContext(GenerateContext)[1];\r\n    const setNoAnswer = useContext(NoAnswerContext)[1];\r\n  return (\r\n    <div className='flexContainer flexDirectionCol'>\r\n        <div className='flexContainer generalText'>There are No Valid Solutions!</div>\r\n        <button className='submit' id='newMatrixButton' onClick={()=>{setGenerateMatrix(1);setNoAnswer(0);}}>Generate another Matrix?</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoValidAnswer","import React from \"react\";\r\n\r\nfunction Info() {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"inherit\">\r\n        This is a visualization of the problem Rat in a Maze.\r\n      </div>\r\n      <a\r\n        href=\"https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1\"\r\n        target={\"__blank\"}\r\n      >\r\n        Question Link\r\n      </a>\r\n      <div className=\"inherit\">\r\n        Click on the <span className=\"inherit\" style={{color : \"lime\"}}>Green </span> \r\n        tiles to turn them <span className=\"inherit\" style={{color : \"rgb(243, 67, 67)\"}}>Red</span> (blocked cell) and vice versa.\r\n      </div>\r\n      <div className=\"inherit\">\r\n        S represents the Starting Cell and E represents the End Cell.\r\n      </div>\r\n      <div className=\"inherit\">\r\n        The Code will generate a random solution from all possible solutions.\r\n      </div>\r\n      <div className=\"inherit creditText flexContainer\">\r\n        Made by Nissan Kumar\r\n        <a href=\"https://github.com/NissanK/Rat_In_A_Maze_Visualization\" target={\"__blank\"}>\r\n          <img src={require('../images/Github-logo.png')} className=\"icon github\" alt=\"github-logo\"></img>\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/nissan-kumar-554a7a224/\" target={\"__blank\"}>\r\n          <img src={require('../images/LinkedIn-logo.png')} className=\"icon linkedin\" alt=\"linkedin-logo\"></img>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;","import React, { useContext } from 'react'\r\nimport { InfoContext } from './Main'\r\n\r\nfunction Backdrop() {\r\n    const setInfoDisplay = useContext(InfoContext)[1];\r\n  return (\r\n    <div className='backdrop' onClick={()=> {setInfoDisplay(0)}}></div>\r\n  )\r\n}\r\n\r\nexport default Backdrop","import React from 'react'\r\nimport { useContext } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfo } from '@fortawesome/free-solid-svg-icons' // <-- import styles to be used\r\nimport { InfoContext } from './Main'\r\n\r\nfunction InfoBtn() {\r\n    const setInfoDisplay = useContext(InfoContext)[1];\r\n  return (\r\n    <div>\r\n        <button className='info-btn flexContainer' onClick={()=>{setInfoDisplay(1)}}><FontAwesomeIcon icon={faInfo} className=\"inherit\"></FontAwesomeIcon></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoBtn","import React,{useState,useEffect} from 'react' \r\nimport GridInput from './GridInput';\r\nimport QuestionMatrix from './QuestionMatrix';\r\nimport SolutionMatrix from './SolutionMatrix';\r\nimport NoValidAnswer from './NoValidAnswer';\r\nimport Info from './Info';\r\nimport Backdrop from './Backdrop';\r\nimport InfoBtn from './InfoBtn';\r\n\r\nexport const DimensionContext = React.createContext();\r\nexport const MatrixValues = React.createContext();\r\nexport const GenerateContext = React.createContext();\r\nexport const FindSolutionsContext = React.createContext();\r\nexport const SolutionsContext = React.createContext();\r\nexport const PositionSolutionContext = React.createContext();\r\nexport const InputDisplayContext = React.createContext();\r\nexport const NoAnswerContext = React.createContext();\r\nexport const InfoContext = React.createContext();\r\n\r\nfunction Main() {\r\n  const [rows, setRows] = useState(0);\r\n  const [columns, setColumns] = useState(0);\r\n  const [matrixValues ,setMatrixValues] = useState([]);\r\n  const [generateMatrix,setGenerateMatrix] = useState(0);\r\n  const [findSolutions,setFindSolutions] = useState(0);\r\n  const [validSolution,setValidSolution] = useState(\"\");\r\n  const [validSolutionCnt,setValidSolutionCnt] = useState(0);\r\n  const [positionSolutionX,setPositionSolutionX] = useState([0]);\r\n  const [positionSolutionY,setPositionSolutionY] = useState([0]);\r\n  const [inputDisplay,setInputDisplay] = useState(1);\r\n  const [infoDisplay,setInfoDisplay] = useState(0);\r\n\r\n  const [noAnswer,setNoAnswer] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(generateMatrix){\r\n      let newMatrix = [...matrixValues];\r\n      newMatrix = [];\r\n      for(let i = 0;i<rows;i++){\r\n        const r = [];\r\n        for(let j = 0;j<columns;j++){\r\n          r.push({key : j,valid : 1});\r\n        }\r\n        newMatrix.push({key : i,row : r});\r\n      }\r\n      setMatrixValues(newMatrix);\r\n    }\r\n    setGenerateMatrix(0);\r\n    setInputDisplay(1);\r\n  }, [generateMatrix,columns,matrixValues,rows])\r\n  \r\n  let ans = [];\r\n  useEffect(()=>{\r\n    \r\n    function getRandomInt(min, max) {\r\n      min = Math.ceil(min);\r\n      max = Math.floor(max);\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n  \r\n    function dfs(x,y,current_path,visited){\r\n      if(x<0 || y< 0 || x>=rows || y>=columns || matrixValues[x].row[y].valid === 0 || visited[x][y] === 1){\r\n        return;\r\n      }\r\n  \r\n      if(x === rows-1 && y === columns-1){\r\n        ans.push(current_path);\r\n      }\r\n  \r\n      visited[x][y] = 1;\r\n      dfs(x-1,y,current_path + 'U',visited);\r\n      dfs(x+1,y,current_path + 'D',visited);\r\n      dfs(x,y-1,current_path + 'L',visited);\r\n      dfs(x,y+1,current_path + 'R',visited);\r\n      visited[x][y] = 0;\r\n    }\r\n\r\n    function calculateNew(){\r\n      const newValid = ans[getRandomInt(0,ans.length-1)];\r\n    \r\n        setValidSolutionCnt(ans.length);\r\n        setValidSolution(newValid);\r\n    \r\n        let newPositionX = [...positionSolutionX];\r\n        let newPositionY = [...positionSolutionY];\r\n    \r\n        newPositionX = [0];\r\n        newPositionY = [0];\r\n    \r\n        if(newPositionX.length === 1 && newPositionY.length === 1){\r\n          let n = newValid.length;\r\n          let x = 0;\r\n          let y = 0;\r\n          for(let i = 0;i<n;i++){\r\n            if(newValid[i] === 'R') y = y + 1;\r\n            else if(newValid[i] === 'L') y = y-1;\r\n            else if(newValid[i] === 'U') x = x -1;\r\n            else x = x + 1;\r\n            newPositionX.push(x);\r\n            newPositionY.push(y);\r\n          }\r\n          setPositionSolutionX(newPositionX);\r\n          setPositionSolutionY(newPositionY);\r\n        }\r\n    }\r\n  \r\n    function findRatInAMaze(){\r\n      if((Array.isArray(ans) && ans.length)){\r\n        calculateNew();\r\n      }\r\n      else{\r\n        let visited = [];\r\n  \r\n        for(let i = 0;i<rows;i++){\r\n          let visitedRow = [];\r\n          for(let j= 0;j<columns;j++){\r\n            visitedRow.push(0);\r\n          }\r\n          visited.push(visitedRow);\r\n        }\r\n        dfs(0,0,\"\",visited);\r\n        if((Array.isArray(ans) && ans.length)){\r\n          calculateNew();\r\n        }\r\n        else{\r\n          setNoAnswer(1);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(findSolutions){\r\n      setValidSolution(\"\");\r\n      setValidSolutionCnt(0);\r\n      findRatInAMaze();\r\n    }\r\n    setFindSolutions(0);\r\n  },[findSolutions,columns,matrixValues,positionSolutionX,positionSolutionY,rows])\r\n\r\n  return (\r\n    <div>\r\n      <InfoContext.Provider value={[infoDisplay,setInfoDisplay]}>\r\n        {infoDisplay ? <Info></Info> : null}\r\n        {infoDisplay ? <Backdrop></Backdrop> : null}\r\n        <InfoBtn></InfoBtn>\r\n      </InfoContext.Provider>\r\n\r\n      <GenerateContext.Provider value = {[generateMatrix,setGenerateMatrix]}>\r\n        <DimensionContext.Provider value={[rows,setRows,columns,setColumns]}>\r\n\r\n          <NoAnswerContext.Provider value={[noAnswer,setNoAnswer]}>\r\n            <SolutionsContext.Provider value={[validSolution,setValidSolution,validSolutionCnt,setValidSolutionCnt]}>\r\n              <GridInput></GridInput>\r\n            </SolutionsContext.Provider>\r\n\r\n            <MatrixValues.Provider value = {[matrixValues,setMatrixValues]}>\r\n\r\n              <FindSolutionsContext.Provider value={[findSolutions,setFindSolutions]}>\r\n\r\n                <InputDisplayContext.Provider value={[inputDisplay,setInputDisplay]}>\r\n                  {(rows && inputDisplay)? <QuestionMatrix></QuestionMatrix> : null}\r\n                </InputDisplayContext.Provider>\r\n\r\n                <SolutionsContext.Provider value={[validSolution,setValidSolution,validSolutionCnt,setValidSolutionCnt]}>\r\n                  <PositionSolutionContext.Provider value = {[positionSolutionX,setPositionSolutionX,positionSolutionY,setPositionSolutionY]}>\r\n                    {validSolutionCnt ? <SolutionMatrix ></SolutionMatrix> : null}\r\n                  </PositionSolutionContext.Provider>\r\n                </SolutionsContext.Provider>\r\n\r\n                  {(validSolutionCnt === 0 && noAnswer===1) && <NoValidAnswer></NoValidAnswer>}\r\n                  \r\n              </FindSolutionsContext.Provider>\r\n            </MatrixValues.Provider>\r\n          </NoAnswerContext.Provider>\r\n\r\n        </DimensionContext.Provider>\r\n      </GenerateContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n\n  return (\n    <div>\n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}